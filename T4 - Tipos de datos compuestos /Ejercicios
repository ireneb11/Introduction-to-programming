

// Library inclusion
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

/*
namespace tema4
{
    internal class Program
    {
        static void Main(string[] args)
        {
            // vector secuencia de números, cada uno se asocia al tiempo máximo en cada nivel

            int[] tiempos = { 300, 280, 250, 200, 180 };

            Console.WriteLine("Tiempo máximo en cada nivel:");
            for (int i = 0; i < tiempos.Length; i++)
            {
                Console.WriteLine($"Nivel {i + 1}: {tiempos[i]}");
            }
        }
    }
}



namespace tema4
{
    internal class Program
    {
        static void Main(string[] args)
        {
            // vector secuencia de números, cada uno se asocia al tiempo máximo en cada nivel

            int[] tiempos = { 300, 280, 250, 200, 180 };
            int nivel = 1;

            Console.WriteLine("Tiempo máximo en cada nivel:");
            foreach (int tiempo in tiempos)
            {
                Console.WriteLine($"Nivel {nivel}: {tiempo} segundos");
                nivel++;
            }
           
        }
    }
}



namespace tema4
{
    internal class Program
    {
        static void Main(string[] args)
        {
            // Array  de eneigos en el nivel

            string[] enemigos = { "Goomba", "Koopa", "Lakitu", "Boo", "Bowser" };
            
            Console.WriteLine("Enemigos en el nivel:");
            foreach (string enemigo in enemigos)
            {
                Console.WriteLine(enemigo);
            }

        }
        // Other functions
    }
}




namespace tema4
{
    internal class Program
    {
        static void Main(string[] args)
        {
            // Array  de eneigos en el nivel

            string[] estados = { "Pequeño", "Super Mario", "Mario de Fuego", "Mario Mapache" };

            Console.WriteLine("Estados de Mario:");
            foreach (string estado in estados)
            {
                Console.WriteLine(estado);
            }

        }
        // Other functions
    }
}



namespace tema4
{
    internal class Program
    {
        static void Main(string[] args)
        {

            string[] niveles = { "Mundo 1-1", "Mundo 1-2", "Mundo 1-3", "Mundo 1-4", "Castillo Final" };

            Console.WriteLine("Niveles en el juego:");
            foreach (string nivel in niveles)
            {
                Console.WriteLine(nivel);
            }

        }
        // Other functions
    }
}



namespace tema4
{
    internal class Program
    {
        static void Main(string[] args)
        {

            int[] puntuaciones = { 5000, 12000, 15000, 18000, 25000 };

            Console.WriteLine("Puntuaciones máximas:");
            foreach (int puntaje in puntuaciones)
            {
                Console.WriteLine(puntaje);
            }

        }
        // Other functions
    }
}



namespace tema4
{
    internal class Program
    {
        static void Main(string[] args)
        {

            string[] monedas = { "Moneda normal", "Moneda Roja", "Moneda Azul", "Moneda Estrella" };

            Console.WriteLine("Tipos de monedas en el juego:");
            foreach (string moneda in monedas)
            {
                Console.WriteLine(moneda);
            }

        }
        // Other functions
    }
}



namespace tema4
{
    internal class Program
    {
        static void Main(string[] args)
        {

            int[] vidasExtra = { 1, 0, 1, 2, 0 };

            Console.WriteLine("Vidas extra en cada nivel:");
            for (int i = 0; i < vidasExtra.Length; i++)
            {
                Console.WriteLine($"Nivel {i + 1}: {vidasExtra[i]}");
            }

        }
        // Other functions
    }
}



namespace tema4
{
    internal class Program
    {
        static void Main(string[] args)
        {

            string[] potenciadores = { "Super Champiñon", "Flor de Fuego", "Estrella" };

            Console.WriteLine("Potenciadores disponibles en el nivel:");
            foreach (string potenciador in potenciadores)
            {
                Console.WriteLine(potenciador);
            }

        }
        // Other functions
    }
}



namespace tema4
{
    internal class Program
    {
        static void Main(string[] args)
        {
            // vector posiciones de enemigos en el eje X
            int[] posicionesEnemigos = { 70, 100, 250, 400, 550, 700 };

            // Impresion de las posiciones de los enemigos
            for (int i = 0; i < posicionesEnemigos.Length; i++)
            {
                Console.WriteLine($"Posición del enemigo {i + 1}: {posicionesEnemigos[i]}");
            }
            Console.WriteLine("- - - - - - - - - - - - - - - - - - - - - - - - - - - - ");
            Console.WriteLine("Adicción de un nuevo enemigo");
            Console.WriteLine("- - - - - - - - - - - - - - - - - - - - - - - - - - - - ");

            // Adición de un nuevo enemigo
            int[] nuevasPosicionesEnemigos = new int[posicionesEnemigos.Length + 1];
            for (int i = 0; i < posicionesEnemigos.Length; i++)
            {
                nuevasPosicionesEnemigos[i] = posicionesEnemigos[i];
            }
            nuevasPosicionesEnemigos[nuevasPosicionesEnemigos.Length - 1] = 800;

            // Actualización del vector de posiciones de enemigos
            posicionesEnemigos = nuevasPosicionesEnemigos;

            // Impresion de las posiciones de los enemigos
            for (int i = 0; i < posicionesEnemigos.Length; i++)
            {
                Console.WriteLine($"Posición del enemigo {i + 1}: {posicionesEnemigos[i]}");
            }

        }
        // Other functions
    }
}



namespace tema4
{
    internal class Program
    {
        static void Main(string[] args)
        {

            // Declaration of variables
            int[] vector = new int[5]; 
            // Loop to fill the vector
            for (int i = 0; i < vector.Length; i++)
            {
                Console.Write("Enter the value of the position {0}: ", i);
                vector[i] = Convert.ToInt32(Console.ReadLine());
            }
            // Loop to show  the vector
            Console.WriteLine("\nThe vector is: ");
            for (int i = 0; i < 5; i++)
            {
                Console.WriteLine("The value of the position {0} is {1}", i, vector[i]);
            }

            //Loop to show the vector in reverse
            Console.WriteLine("\nThe vector in reverse is: ");
            for (int i = 4; i >= 0; i--)
            {
                Console.WriteLine("The value of the position {0} is {1}", i, vector[i]);
            }

            // Loop to show the vector in reverse
            Console.WriteLine("\nThe vector in reverse is: ");
            for (int i = 0; i < 5; i++)
            {
                Console.WriteLine("The value of the position {0} is {1}", i, vector[4 - i]);
            }

        }
        // Other functions
    }
}



namespace tema4
{
    internal class Program
    {
        static void Main(string[] args)
        {
            // Array  de enemigos en el nivel

            string[] enemigos = { "Goomba", "Koopa", "Boo", "Lakitu", "Bowser" };

            // Mostrar los enemigos
            Console.WriteLine("orden original de los enemigos:");
            foreach (string enemigo in enemigos)
            {
                Console.WriteLine(enemigo);
            }

            // Invertir el vector
            Array.Reverse(enemigos);

            Console.WriteLine("\nOrden invertido de los enemigos: ");
            foreach (string enemigo in enemigos)
            {
                Console.WriteLine(enemigo);
            }

        }
        // Other functions
    }
}


namespace tema4
{
    internal class Program
    {
        static void Main(string[] args)
        {
            // Array  de items

            string[] items = { "Moneda", "hongo", "Estrella", "Flor de Fuego", "Super Hongo" };
            string[] itemsInvertidos = new string[items.Length];
            
            // vector original
            Console.WriteLine("Items en el orden original:");
            foreach (string item in items)
            {
                Console.WriteLine(item);
            }

            // Inversión manual del vector
            for (int i = 0; i < items.Length; i++)
            {
                itemsInvertidos[i] = items[items.Length - 1 - i];
            }

            Console.WriteLine("\nItems en el orden invertido:");
            foreach (string item in itemsInvertidos)
            {
                Console.WriteLine(item);
            }
        }
        // Other functions
    }
}


namespace tema4
{
    internal class Program
    {
        static void Main(string[] args)
        {
            // List of enemies
            List<string> enemigos = new List<string> { "Goomba", "Koopa", "Lakitu", "Bowser" };

            Console.WriteLine("Enemigos en el nivel:");
            foreach (string enemigo in enemigos)
            {
                Console.WriteLine($"- {enemigo}");
            }
            string nuevoEnemigo = "Boo";
            Console.WriteLine($"\nNuevo enemigo añadido: {nuevoEnemigo}");

            // Add a new enemy
            enemigos.Add(nuevoEnemigo);
            Console.WriteLine("\nEnemigos actuales:");
            foreach (string enemigo in enemigos)
            {
                Console.WriteLine($"- {enemigo}");
            }

            // Cantidad de enemigos
            Console.WriteLine($"\nCantidad de enemigos: {enemigos.Count}");

            // Mario derrota a un enemigo
            Console.WriteLine("\nMario derrota a Goomba");
            enemigos.Remove("Goomba");
            Console.WriteLine("\nGoomba eliminado. Enemigos restantes:");
            foreach (string enemigo in enemigos)
            {
                Console.WriteLine($"- {enemigo}");
            }

            // Cantidad de enemigos
            Console.WriteLine($"\nCantidad de enemigos: {enemigos.Count}");
        }
        // Other functions
    }
}


namespace tema4
{
    internal class Program
    {
        static void Main(string[] args)
        {
            List <string> powerUps = new List<string> { "Hongo", "Flor de Fuego", "Estrella" };

            Console.WriteLine("Power-ups en el nivel:");
            foreach (string item in powerUps)
            {
                Console.WriteLine($"- {item}");
            }
        }
        // Other functions
    }
}


namespace tema4
{
    internal class Program
    {
        static void Main(string[] args)
        {
            List<int> vidas = new List<int> { 1, 2, 3, 4, 5 };   // Mario empieza con 5 vidas               

            // Vidas de mario
            Console.WriteLine($"Mario tiene {vidas.Count} vidas.");
            Console.WriteLine($"Mario tiene {string.Join(", ", vidas)} vidas.");

            // Mario pierde una vida
            Console.WriteLine("\nMario pierde una vida.");
            vidas.RemoveAt(vidas.Count - 1);

            Console.WriteLine($"Mario tiene {vidas.Count} vidas restantes.");
            Console.WriteLine("A Mario le quedan las siguientes vidas:");
            foreach (int vida in vidas)
            {
                Console.WriteLine($"Vida: {vida}");
            }

        }
        // Other functions
    }
}


namespace tema4
{
    internal class Program
    {
        static void Main(string[] args)
        {
            List<string> personajes = new List<string> { "Mario", "Luigi", "Peach", "Bowser" };
            Console.WriteLine("Personajes principales de Super mario Bross: ");
            foreach (string personaje in personajes)
            {
                Console.WriteLine($"- {personaje}");
            }
            Console.WriteLine("Cantidad de personajes: " + personajes.Count);
            Console.WriteLine("Personaje en la posición 3: " + personajes[2]);
            Console.WriteLine("Personaje en la posición 4: " + personajes.ElementAt(3));
        }
        // Other functions
    }
}



namespace tema4
{
    internal class Program
    {
        static void Main(string[] args)
        {
            // Lista de niveles en Super Mario Bross
            List<string> niveles = new List<string>
                {
                "Mundo 1-1",
                "Mundo 1-2",
                "Mundo 1-3",
                "Mundo 1-4 (Castillo Bowser)",
                "Mundo 2-1",
                "Mundo 2-2"

            };

            // Lista de personajes jugables
            List<string> personajes = new List<string> 
            { 
                "Mario", 
                "Luigi", 
                "Peach", 
                "Toad" 
            };
            Console.WriteLine("Bienvenido a Super mario Bross: ");
            
            // Mostrar los personajes disponibles
            for (int i = 0; i < personajes.Count; i++)
            {
                Console.WriteLine($"{i + 1}. {personajes[i]}");
            }

            Console.Write("Selecciona un personaje (ingresa el numero): ");
            int opcionPersonaje = Convert.ToInt32(Console.ReadLine());

            if ( opcionPersonaje < 0 || opcionPersonaje >= personajes.Count +1 )
            {
                Console.WriteLine("Opción inválida. Saliendo del juego...");
                return;
            }
            
            string personajeSeleccionado = personajes[opcionPersonaje-1];
            Console.WriteLine($"Has seleccionado a {personajeSeleccionado}!.");

            Console.WriteLine("Iniciando el juego...");

            // Recorre los nivelescon el personaje seleccionado
            foreach (string nivel in niveles)
            {
                Console.WriteLine($"{personajeSeleccionado} ha llegado al nivel {nivel}.");
                Console.WriteLine("Presiona ENTER para continuar...");
                Console.ReadLine();

            }

            Console.WriteLine("¡Felicidades! Has completado todos los niveles.");

            // Other functions
        }
    }
}
*/

/*
// MATRICES
namespace tema4
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int[,] mapaNivel =
            {
                { 0, 0, 1, 0, 0, 2, 0},
                { 0, 1, 1, 1, 4, 1, 1},
                { 3, 1, 1, 1, 4, 1, 1}
            };

            for (int i = 0; i < mapaNivel.GetLength(0); i++)
            {
                for (int j = 0; j < mapaNivel.GetLength(1); j++)
                {
                    Console.Write(mapaNivel[i, j] + " ");
                }
                Console.WriteLine();
            }
            // Other functions
        }
    }
}


namespace tema4
{
    internal class Program
    {
        static void Main(string[] args)
        {
            int[,] monedas =
            {
                { 5, 10, 8, 3, 7 },
                { 2, 4, 6, 1, 5 },
                
            };

            int total = 0;
            for (int i = 0; i < monedas.GetLength(0); i++)
            {
                for (int j = 0; j < monedas.GetLength(1); j++)
                {
                    total += monedas[i, j];
                }
            }
            Console.WriteLine($"Total de monedas en el nivel: {total}");
            // Other functions
        }
    }
}
*/


namespace tema4
{
    internal class Program
    {
        static void Main(string[] args)
        {
            // Matriz numerica que representa un nivel de Super Mario Bross

            int[,] nivel = {
                { 0, 0, 1, 0, 0, 2, 0, 0, 0 },
                { 0, 1, 1, 1, 4, 1, 1, 1, 0 },
                { 3, 1, 1, 1, 4, 1, 1, 1, 3 },
                { 0, 1, 1, 1, 4, 1, 1, 1, 0 }


            };
            // Mostrar la matriz en consola
            Console.WriteLine("Nivel de Super Mario Bross (matriz numérica):");
            for (int i = 0; i < nivel.GetLength(0); i++)  // Recorre filas
            {
                Console.Write("{"); // Imprime la llave de apertura
                for (int j = 0; j < nivel.GetLength(1); j++)  // Recorre columnas
                {
                    Console.Write(nivel[i, j]); // Imprime el número en la posición (i, j)

                    if (j < nivel.GetLength(1) - 1) // Si NO es la última columna...
                    {
                        Console.Write(", "); // Imprime una coma y un espacio
                    }
                }
                Console.WriteLine("}"); // Cierra la fila con }
            }



            // Other functions
        }
    }
}
